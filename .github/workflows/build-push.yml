name: Build and Push and Deploy Docker Images
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  build-and-push:
    runs-on: self-hosted
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GHCR_PAT: ${{ secrets.GHCR_PAT }}
      GITHUB_EVENT_NAME: ${{ github.event_name }}
      GITHUB_EVENT_NUMBER: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}


      - name: Build & Push
        shell: powershell
        run: |
          $IMAGE = "ghcr.io/${{ github.repository }}/web"

          if ($env:GITHUB_EVENT_NAME -eq "pull_request") {
            $TAG = "pr-$env:GITHUB_EVENT_NUMBER"
          } else {
            $TAG = "latest"
          }

          docker build -t "${IMAGE}:latest" ./app
          docker tag "${IMAGE}:latest" "${IMAGE}:${TAG}"
          docker push "${IMAGE}:latest"
          docker push "${IMAGE}:${TAG}"

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GHCR_PAT: ${{ secrets.GHCR_PAT }}
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: powershell
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_ACTION: ${{ github.event.action }}
          GITHUB_EVENT_NUMBER: ${{ github.event.number }}
        run: |
          if ($env:GITHUB_EVENT_NAME -eq "push") {
            ./scripts/deploy_base.ps1
          } elseif ($env:GITHUB_EVENT_NAME -eq "pull_request") {
            if ($env:GITHUB_EVENT_ACTION -eq "closed") {
              ./scripts/remove_preview.ps1 $env:GITHUB_EVENT_NUMBER
            } else {
              ./scripts/deploy_preview.ps1 $env:GITHUB_EVENT_NUMBER
            }
          }
          

